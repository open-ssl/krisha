version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - "${POSTGRES_PORT}"
    ports:
      - "5444:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    expose:
      - "${REDIS_PORT}"
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  scraper:
    build:
      context: ./scraper_service
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        poetry run alembic upgrade head &&
        poetry run python src/main.py
      "
    volumes:
      - ./scraper_service:/app
    ports:
      - "${SCRAPER_SERVICE_PORT}:${SCRAPER_SERVICE_PORT}"

  bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      REDIS_URL: ${REDIS_URL}
      SCRAPER_SERVICE_URL: http://scraper:${SCRAPER_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      scraper:
        condition: service_started
    volumes:
      - ./telegram_bot:/app

volumes:
  postgres_data:
  redis_data: