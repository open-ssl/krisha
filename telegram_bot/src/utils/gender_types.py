from typing import List


class GenderTypes:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –ø–æ–ª–∞ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ —Å–æ—Å–µ–¥—è–º
    """

    # –¢–∏–ø—ã –ø–æ–ª–∞
    MALE = "male"
    FEMALE = "female"

    # –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Å–æ—Å–µ–¥—è–º
    PREFER_MALE = "üë® –ú—É–∂—á–∏–Ω—ã"
    PREFER_FEMALE = "üë© –ñ–µ–Ω—â–∏–Ω—ã"
    NO_PREFERENCE = "ü§ù –ù–µ –≤–∞–∂–Ω–æ"

    # –ù–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –ø–æ–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    GENDER_DISPLAY_NAMES = {
        MALE: "üë® –ú—É–∂—Å–∫–æ–π",
        FEMALE: "üë© –ñ–µ–Ω—Å–∫–∏–π",
    }

    GENDER_NAME_BY_DISPLAY = {
        "üë® –ú—É–∂—Å–∫–æ–π": MALE,
        "üë© –ñ–µ–Ω—Å–∫–∏–π": FEMALE,
    }

    # –ù–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ —Å–æ—Å–µ–¥—è–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    PREFERENCE_DISPLAY_NAMES = {
        PREFER_MALE: "üë® –° –º—É–∂—á–∏–Ω–∞–º–∏",
        PREFER_FEMALE: "üë© –° –∂–µ–Ω—â–∏–Ω–∞–º–∏",
        NO_PREFERENCE: "üë• –ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã",
    }

    @classmethod
    def get_gender_display_name(cls, gender_type: str) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ–ª–∞

        Args:
            gender_type (str): –¢–∏–ø –ø–æ–ª–∞

        Returns:
            str: –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        """
        return cls.GENDER_DISPLAY_NAMES.get(gender_type, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    @classmethod
    def get_gender_name_by_display(cls, gender_type: str) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ–ª–∞

        Args:
            gender_type (str): –¢–∏–ø –ø–æ–ª–∞

        Returns:
            str: –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        """
        return cls.GENDER_NAME_BY_DISPLAY.get(gender_type, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    @classmethod
    def get_preference_display_name(cls, preference_type: str) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Å–æ—Å–µ–¥—è–º

        Args:
            preference_type (str): –¢–∏–ø –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è

        Returns:
            str: –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        """
        return cls.PREFERENCE_DISPLAY_NAMES.get(preference_type, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    @classmethod
    def get_all_genders(cls) -> List[str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–∞

        Returns:
            List[str]: –°–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –ø–æ–ª–∞
        """
        return [cls.MALE, cls.FEMALE]

    @classmethod
    def get_all_preferences(cls) -> List[str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ —Å–æ—Å–µ–¥—è–º

        Returns:
            List[str]: –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
        """
        return [cls.PREFER_MALE, cls.PREFER_FEMALE, cls.NO_PREFERENCE]

    @classmethod
    def is_valid_gender(cls, gender_type: str) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–º —Ç–∏–ø–æ–º –ø–æ–ª–∞

        Args:
            gender_type (str): –¢–∏–ø –ø–æ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

        Returns:
            bool: True, –µ—Å–ª–∏ —Ç–∏–ø –≤–∞–ª–∏–¥–Ω—ã–π
        """
        return gender_type in cls.get_all_genders()

    @classmethod
    def is_valid_preference(cls, preference_type: str) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–º —Ç–∏–ø–æ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è

        Args:
            preference_type (str): –¢–∏–ø –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

        Returns:
            bool: True, –µ—Å–ª–∏ —Ç–∏–ø –≤–∞–ª–∏–¥–Ω—ã–π
        """
        return preference_type in cls.get_all_preferences()
