import asyncio
import random
import httpx
from env import TOGETHER_API_KEY1, TOGETHER_API_KEY2
from time import time, sleep


API_KEYS = [
    TOGETHER_API_KEY1,
    TOGETHER_API_KEY2
]

POST_TEXT = """
'–î–æ–±—Ä—ã–π –¥–µ–Ω—å.\n–ò—â—É –¥–µ–≤—É—à–∫—É –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É (–ª–∏–±–æ –æ–¥–Ω—É, –ª–∏–±–æ –¥–≤–æ–∏—Ö) \n–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å–æ –≤—Å–µ–º–∏ —É–¥–æ–±—Å—Ç–≤–∞–º–∏, 2—Ö –∫–æ–º–Ω–∞—Ç–Ω–∞—è.\n–ñ–ö –∑–æ–¥–∏–∞–∫, 5—ç—Ç–∞–∂ \n–ê–≤—Ç–æ–±—É—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ —Ä—è–¥–æ–º, –º–∞–≥–∞–∑–∏–Ω—ã, –ê—Ç–∞–∫–µ–Ω—Ç, —É–Ω–∏–≤–µ—Ä—ã –∏ –ø—Ä–æ—á–µ–µ. \n–ê–¥—Ä–µ—Å: –†–∞–¥–æ—Å—Ç–æ–≤—Ü–∞ 158 (–≥—Ä—É–±–æ –≥–æ–≤–æ—Ä—è –¢–∏–º–∏—Ä—è–∑–µ–≤–∞-–ì–∞–≥–∞—Ä–∏–Ω–∞).\n–ü–æ –æ–ø–ª–∞—Ç–µ –∏ –ø—Ä–æ—á–∏–º –≤–æ–ø—Ä–æ—Å–∞–º (–ø–∏—Å–∞—Ç—å –Ω–∞ –Ω–æ–º–µ—Ä 87473939708)'

"""
# –ü—Ä–æ–º–ø—Ç (–ø—Ä–∏–º–µ—Ä —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –æ –∫–≤–∞—Ä—Ç–∏—Ä–µ)
PROMPT_TEXT = f"""
–û–ø—Ä–µ–¥–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Å—Ç–∞:
{POST_TEXT}
""" + """
–¢—ã –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –≤ –æ—Ç–≤–µ—Ç–µ **–¢–û–õ–¨–ö–û –û–î–ò–ù** JSON-–æ–±—ä–µ–∫—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫—É:
{
    "is_offer": true/false,  (–≠—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–¥–∞—á–µ –≤ –∞—Ä–µ–Ω–¥—É –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏–ª–∏ –º–µ—Å—Ç–∞ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ? (true/false) (–æ—Ç–≤–µ—Ç –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º))
    "is_roommate_offer": true/false,  (–≠—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ —Å–æ—Å–µ–¥–∞ –¥–ª—è –ø–æ–¥—Å–µ–ª–µ–Ω–∏—è –∏–ª–∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è? (true/false) (–æ—Ç–≤–µ—Ç –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º))
    "is_rental_offer": true/false,  (–≠—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –∞—Ä–µ–Ω–¥–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã —Ü–µ–ª–∏–∫–æ–º –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å—ä—ë–º—â–∏–∫–∞? (true/false) (–æ—Ç–≤–µ—Ç –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º))
    "montly_price": string, (–¶–µ–Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –∑–∞ –∞—Ä–µ–Ω–¥—É)
    "preferred_gender": "boy"/"girl"/"both"/"no", (–ö–æ–≥–æ –∏—â—É—Ç (boy (–º—É–∂—Å–∫–æ–π –ø–æ–ª), girl (–º—É–∂—Å–∫–æ–π –ø–æ–ª), both (–ø–æ–ª –Ω–µ –≤–∞–∂–µ–Ω), no (–Ω–µ —É–∫–∞–∑–∞–Ω–æ))? (–æ—Ç–≤–µ—Ç –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º))
    "location": "string" –∏–ª–∏ null,  (–£–∫–∞–∑–∞–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–∞—á–µ None.)
    "contact": "string" –∏–ª–∏ null, (–ö–æ–Ω—Ç–∞–∫—Ç –∞–≤—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–∞—á–µ None. (–∫–æ–Ω—Ç–∞–∫—Ç –∞–≤—Ç–æ—Ä–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è))
}

–ù–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –±–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö –∫—Ä–æ–º–µ 1 JSON-–æ–±—ä–µ–∫—Ç–∞.
"""


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π API-–∫–ª—é—á–µ–π
async def send_request():
    for _ in range(len(API_KEYS)):
        api_key = random.choice(API_KEYS)

        print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∫–ª—é—á: {api_key}...")

        try:
            async with httpx.AsyncClient(timeout=10.0) as client:
                headers = {
                    "Authorization": f"Bearer {api_key}",
                    "Content-Type": "application/json"
                }
                payload = {
                    "model": "meta-llama/Llama-3.3-70B-Instruct-Turbo-Free",
                    "prompt": PROMPT_TEXT,
                    "max_tokens": 100,
                    "temperature": 0.1
                }
                response = await client.post(
                    "https://api.together.xyz/v1/completions",
                    json=payload,
                    headers=headers
                )
                response = response.json()

            if response and "choices" in response:
                print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç!")
                return response["choices"][0]["text"]

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

        sleep(0.5)  # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–º–µ–Ω–æ–π –∫–ª—é—á–∞

    return "‚ùå –í—Å–µ –∫–ª—é—á–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç."


if __name__ == '__main__':
    start_time = time()
    result = asyncio.run(send_request())
    print(f"???? {time() - start_time}")
    print("\nüìå **–†–µ–∑—É–ª—å—Ç–∞—Ç:**\n", result)
    index_start = result.find("{")
    index_finish = result.find("}")

    import json

    json_object = "{" + result[index_start+1:index_finish] + "}"
    finish_result = json.loads(json_object)

